<?php

/**
 * Code Vulnerability Scanner Tool
 */

class CodeVulnerabilityScanner
{
    private array $vulnerabilityPatterns = [
        'sql_injection' => '/\$_[GET|POST|REQUEST].*sql|mysql_query|mysqli_query/i',
        'xss' => '/echo\s+\$_[GET|POST|REQUEST]|print\s+\$_[GET|POST|REQUEST]/i',
        'file_inclusion' => '/include\s+\$_[GET|POST|REQUEST]|require\s+\$_[GET|POST|REQUEST]/i',
        'command_injection' => '/exec\s+\$_[GET|POST|REQUEST]|system\s+\$_[GET|POST|REQUEST]/i'
    ];

    public function scanFile(string $filePath): array
    {
        $content = file_get_contents($filePath);
        $lines = explode("\n", $content);
        $vulnerabilities = [];

        foreach ($lines as $lineNumber => $line) {
            foreach ($this->vulnerabilityPatterns as $type => $pattern) {
                if (preg_match($pattern, $line)) {
                    $vulnerabilities[] = [
                        'type' => $type,
                        'line' => $lineNumber + 1,
                        'code' => trim($line),
                        'severity' => $this->getSeverity($type)
                    ];
                }
            }
        }

        return $vulnerabilities;
    }

    private function getSeverity(string $type): string
    {
        $severityMap = [
            'sql_injection' => 'critical',
            'xss' => 'high',
            'file_inclusion' => 'critical',
            'command_injection' => 'critical'
        ];

        return $severityMap[$type] ?? 'medium';
    }

    public function scanDirectory(string $directory): array
    {
        $results = [];
        $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory));

        foreach ($iterator as $file) {
            if ($file->isFile() && $file->getExtension() === 'php') {
                $vulnerabilities = $this->scanFile($file->getPathname());
                if (!empty($vulnerabilities)) {
                    $results[$file->getPathname()] = $vulnerabilities;
                }
            }
        }

        return $results;
    }
}
