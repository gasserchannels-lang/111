<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="FactoryConfigurationService.php" path="/Services">
    <totals>
      <lines total="21" comments="0" code="21" executable="5" executed="5" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Services\FactoryConfigurationService" start="9" executable="5" executed="5" crap="2">
      <namespace name="App\Services"/>
      <method name="__construct" signature="__construct(string $factoryClass)" start="11" end="11" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="configureNaming" signature="configureNaming(): void" start="13" end="19" crap="1" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="11">
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_searches_products_across_all_stores"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_handles_api_failure_gracefully"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_product_details_with_cache"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_returns_null_for_invalid_store"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_syncs_store_products"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_store_status"/>
      </line>
      <line nr="15">
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_searches_products_across_all_stores"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_handles_api_failure_gracefully"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_product_details_with_cache"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_returns_null_for_invalid_store"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_syncs_store_products"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_store_status"/>
      </line>
      <line nr="16">
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_searches_products_across_all_stores"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_handles_api_failure_gracefully"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_product_details_with_cache"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_returns_null_for_invalid_store"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_syncs_store_products"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_store_status"/>
      </line>
      <line nr="17">
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_searches_products_across_all_stores"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_handles_api_failure_gracefully"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_product_details_with_cache"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_returns_null_for_invalid_store"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_syncs_store_products"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_store_status"/>
      </line>
      <line nr="18">
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_searches_products_across_all_stores"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_handles_api_failure_gracefully"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_product_details_with_cache"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_returns_null_for_invalid_store"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_syncs_store_products"/>
        <covered by="Tests\Unit\Services\ExternalStoreServiceTest::it_gets_store_status"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Services</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Factories\Factory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FactoryConfigurationService</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$factoryClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Factory</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">configureNaming</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$factoryClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">factoryClass</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$factoryClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">guessFactoryNamesUsing</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FN">fn</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Database\\Factories\\'</token>
        <token name="T_DOT">.</token>
        <token name="T_STRING">class_basename</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Factory'</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="20">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21"/>
    </source>
  </file>
</phpunit>
