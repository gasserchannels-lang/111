--- a/.gitlab-ci.yml
+++ b/.gitlab-ci.yml
@@ -64,7 +64,7 @@ analyze_security:
     script:
         - echo "Starting Security Analysis..."
         - composer audit --format=json > storage/logs/security-audit.json || true
-        - php artisan test tests/Security/ --configuration=phpunit.strict.xml --log-junit=storage/logs/security-tests.xml || true
+        - php artisan test tests/Security/ --log-junit=storage/logs/security-tests.xml || true
     artifacts:
         paths:
             - storage/logs/
@@ -83,7 +83,7 @@ analyze_performance:
     script:
         - echo "Starting Performance Analysis..."
-        - php artisan test tests/Performance/ --configuration=phpunit.testing.xml --log-junit=storage/logs/performance-tests.xml || true
+        - php artisan test tests/Performance/ --log-junit=storage/logs/performance-tests.xml || true
     artifacts:
         paths:
             - storage/logs/
@@ -182,18 +182,12 @@ auto_fix_dependencies:
 test_unit:
     stage: test
     image: php:8.2-cli
     before_script:
         - apt-get update && apt-get install -y curl unzip
         - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
         - apt-get install -y nodejs
         - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
-    services:
-        - name: mysql:8.0
-          alias: mysql
-    variables:
-        DB_HOST: mysql
     needs:
         - job: auto_fix_dependencies
           artifacts: true
     script:
         - echo "Running Unit Tests..."
-        - until mysqladmin ping -h mysql --silent; do echo "Waiting for MySQL..."; sleep 2; done
-        - php artisan migrate --force
-        - php artisan test tests/Unit/ --configuration=phpunit.strict.xml --log-junit=storage/logs/unit-tests.xml
+        - php artisan test tests/Unit/ --log-junit=storage/logs/unit-tests.xml
     artifacts:
         when: always
         reports:
             junit: storage/logs/unit-tests.xml
@@ -204,7 +198,7 @@ test_ai:
     script:
         - echo "Running AI Tests..."
-        - php artisan test tests/AI/ --configuration=phpunit.strict.xml --log-junit=storage/logs/ai-tests.xml
+        - php artisan test tests/AI/ --log-junit=storage/logs/ai-tests.xml
     artifacts:
         when: always
         reports:
             junit: storage/logs/ai-tests.xml
@@ -214,18 +208,12 @@ test_integration:
     stage: test
     image: php:8.2-cli
     before_script:
         - apt-get update && apt-get install -y curl unzip
         - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
         - apt-get install -y nodejs
         - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
-    services:
-        - name: mysql:8.0
-          alias: mysql
-    variables:
-        DB_HOST: mysql
     needs:
         - job: auto_fix_dependencies
           artifacts: true
     script:
         - echo "Running Integration Tests..."
-        - until mysqladmin ping -h mysql --silent; do echo "Waiting for MySQL..."; sleep 2; done
-        - php artisan migrate --force
-        - php artisan test tests/Integration/ --configuration=phpunit.strict.xml --log-junit=storage/logs/integration-tests.xml
+        - php artisan test tests/Integration/ --log-junit=storage/logs/integration-tests.xml
     artifacts:
         when: always
         reports:
             junit: storage/logs/integration-tests.xml
@@ -235,18 +223,12 @@ test_e2e:
     stage: test
     image: php:8.2-cli
     before_script:
         - apt-get update && apt-get install -y curl unzip chromium
         - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
         - apt-get install -y nodejs
         - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
-    services:
-        - name: mysql:8.0
-          alias: mysql
-    variables:
-        DB_HOST: mysql
-        APP_URL: http://localhost:8000
     needs:
         - job: auto_fix_dependencies
           artifacts: true
     script:
         - echo "Running E2E Tests..."
-        - until mysqladmin ping -h mysql --silent; do echo "Waiting for MySQL..."; sleep 2; done
-        - php artisan migrate --force
         - php artisan serve --host=0.0.0.0 --port=8000 &
         - sleep 10
-        - php artisan dusk --configuration=phpunit.testing.xml --log-junit=storage/logs/e2e-tests.xml
+        - php artisan dusk --log-junit=storage/logs/e2e-tests.xml
     artifacts:
         when: always
         reports:
             junit: storage/logs/e2e-tests.xml
@@ -256,18 +238,12 @@ test_links:
     stage: test
     image: php:8.2-cli
     before_script:
         - apt-get update && apt-get install -y curl unzip
         - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
         - apt-get install -y nodejs
         - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
-    services:
-        - name: mysql:8.0
-          alias: mysql
-    variables:
-        DB_HOST: mysql
     needs:
         - job: auto_fix_dependencies
           artifacts: true
     script:
         - echo "Running Link Checker Tests..."
-        - until mysqladmin ping -h mysql --silent; do echo "Waiting for MySQL..."; sleep 2; done
-        - php artisan migrate --force
-        - php artisan test tests/Feature/LinkCheckerTest.php --configuration=phpunit.strict.xml --log-junit=storage/logs/link-checker-tests.xml
+        - php artisan test tests/Feature/LinkCheckerTest.php --log-junit=storage/logs/link-checker-tests.xml
         - php artisan links:check --all
         - php artisan ai:test-quality-system --full
     artifacts:
         when: always
         reports:
             junit: storage/logs/link-checker-tests.xml
         paths:
             - storage/logs/link-check-report.json
@@ -362,7 +338,7 @@ verify_security:
         - php artisan package:discover --ansi
         - echo "Re-running security tests..."
-        - php artisan test tests/Security/ --configuration=phpunit.strict.xml
+        - php artisan test tests/Security/
         - composer audit
         - echo "All security checks passed!"
     artifacts:
         paths:
             - storage/logs/
         expire_in: 1 day